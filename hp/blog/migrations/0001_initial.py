# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-25 14:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title_de', models.CharField(help_text='Page title', max_length=255)),
                ('title_en', models.CharField(help_text='Page title', max_length=255)),
                ('slug_de', models.CharField(help_text='Slug (used in URLs)', max_length=255, unique=True)),
                ('slug_en', models.CharField(help_text='Slug (used in URLs)', max_length=255, unique=True)),
                ('text_de', models.TextField()),
                ('text_en', models.TextField()),
                ('published', models.BooleanField(default=True, help_text='Wether or not the page is public.')),
                ('meta_summary_de', models.CharField(blank=True, help_text='For search engines, max. of 160 characters.', max_length=160, null=True, verbose_name='Meta')),
                ('meta_summary_en', models.CharField(blank=True, help_text='For search engines, max. of 160 characters.', max_length=160, null=True, verbose_name='Meta')),
                ('twitter_summary_de', models.CharField(blank=True, help_text='At most 200 characters.', max_length=200, null=True, verbose_name='Twitter')),
                ('twitter_summary_en', models.CharField(blank=True, help_text='At most 200 characters.', max_length=200, null=True, verbose_name='Twitter')),
                ('opengraph_summary_de', models.CharField(blank=True, help_text='Two to four sentences, default: first three sentences.', max_length=255, null=True, verbose_name='Facebook')),
                ('opengraph_summary_en', models.CharField(blank=True, help_text='Two to four sentences, default: first three sentences.', max_length=255, null=True, verbose_name='Facebook')),
                ('html_summary_de', models.TextField(blank=True, help_text='Any length, but must be valid HTML. Shown in RSS feeds.', null=True, verbose_name='HTML')),
                ('html_summary_en', models.TextField(blank=True, help_text='Any length, but must be valid HTML. Shown in RSS feeds.', null=True, verbose_name='HTML')),
                ('sticky', models.BooleanField(default=False, help_text='Pinned at the top of any list of blog posts.')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title_de', models.CharField(help_text='Page title', max_length=255)),
                ('title_en', models.CharField(help_text='Page title', max_length=255)),
                ('slug_de', models.CharField(help_text='Slug (used in URLs)', max_length=255, unique=True)),
                ('slug_en', models.CharField(help_text='Slug (used in URLs)', max_length=255, unique=True)),
                ('text_de', models.TextField()),
                ('text_en', models.TextField()),
                ('published', models.BooleanField(default=True, help_text='Wether or not the page is public.')),
                ('meta_summary_de', models.CharField(blank=True, help_text='For search engines, max. of 160 characters.', max_length=160, null=True, verbose_name='Meta')),
                ('meta_summary_en', models.CharField(blank=True, help_text='For search engines, max. of 160 characters.', max_length=160, null=True, verbose_name='Meta')),
                ('twitter_summary_de', models.CharField(blank=True, help_text='At most 200 characters.', max_length=200, null=True, verbose_name='Twitter')),
                ('twitter_summary_en', models.CharField(blank=True, help_text='At most 200 characters.', max_length=200, null=True, verbose_name='Twitter')),
                ('opengraph_summary_de', models.CharField(blank=True, help_text='Two to four sentences, default: first three sentences.', max_length=255, null=True, verbose_name='Facebook')),
                ('opengraph_summary_en', models.CharField(blank=True, help_text='Two to four sentences, default: first three sentences.', max_length=255, null=True, verbose_name='Facebook')),
                ('html_summary_de', models.TextField(blank=True, help_text='Any length, but must be valid HTML. Shown in RSS feeds.', null=True, verbose_name='HTML')),
                ('html_summary_en', models.TextField(blank=True, help_text='Any length, but must be valid HTML. Shown in RSS feeds.', null=True, verbose_name='HTML')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
